buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name = "OC repo"
        url = "http://maven.cil.li"
    }
    maven {
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        name 'tterrag Repo'
        url "http://maven.tterrag.com"
    }
    maven {
        name = "Forestry and IC2 repo"
        url = "http://maven.ic2.player.to"
    }
    maven {
        name = "progwml6 repo"
        url "http://dvs1.progwml6.com/files/maven"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
// apply plugin: 'curseforge'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

ant.importBuild 'download-api.xml'
ant.importBuild 'build-ant.xml'

version = "0.11.0"
group= "network.rs485.logisticspipes" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "logisticspipes"

def buildby = 'local'

def ENV = System.getenv()
if (ENV.BUILD_NUMBER) {
    version += "." + ENV.BUILD_NUMBER
    buildby = 'RS485-Jenkins'
} else {
    version += ".local"
}

ant.version = version
ant.archivesBaseName = archivesBaseName

minecraft {
    version = "1.10.2-12.18.3.2185"
    mappings = "snapshot_20161111"
    runDir = "run/assets"

    useDepAts = true
    makeObfSourceJar = false

    replace '%VERSION%', project.version
    replace '%MCVERSION%', "1.10.2"
    replace '%DEBUG%', "false"
    replaceIn "LogisticsPipes.java"
    replaceIn "LPConstants.java"
}

jar {
    manifest {
        attributes('FMLCorePlugin': 'logisticspipes.asm.LogisticsPipesCoreLoader',
                   'FMLCorePluginContainsFMLMod': 'true',
                   'Implementation-Vendor': 'RS485',
                   'Implementation-Title': 'LogisticsPipes',
                   'Implementation-Version': version,
                   'Built-By': buildby )
    }
}

// configure  the source folders
sourceSets {
    main {
        java {
            srcDir 'common'
        }
        resources {
            srcDir 'resources'
        }
    }
    api {
        java {
            srcDir 'dummy'
            srcDir 'api'
        }
    }
    test {
        java {
            srcDir 'test'
        }
    }
}

test {
    reports {
        html.enabled = true
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

dependencies {
    compile 'org.projectlombok:lombok:1.16.8'
    deobfCompile "com.enderio.core:EnderCore:1.10.2-0.4.1.39-beta"
    deobfCompile("com.enderio:EnderIO:1.10.2-3.0.1.69_beta") {
        exclude module: "appliedenergistics2"
        exclude module: "buildcraft"
        exclude module: "Waila"
        exclude module: "forestry_1.10.2"
        exclude module: "OpenComputers"
        exclude module: "CodeChickenLib"
        exclude module: "CodeChickenCore"
        exclude module: "EquivalentExchange3"
    }
    deobfCompile "li.cil.oc:OpenComputers:MC1.10.2-1.6.0.4"
    deobfCompile "mcp.mobius.waila:Waila:1.7.0-B3_1.9.4"
    deobfCompile "net.industrial-craft:industrialcraft-2:2.6.30-ex110:dev"
    deobfCompile("net.sengir.forestry:forestry_1.10.2:5.2.7.220") {
        exclude module: "buildcraft"
        exclude module: "industrialcraft-2"
    }
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
    testCompile 'org.hamcrest:hamcrest-junit:2.0.0.0'

    compile fileTree(dir: "libs", includes: ['*.jar', '*.zip'])
}

task deobfJar(type: Jar, dependsOn: 'jar') {
    from sourceSets.main.output
    classifier = 'dev'
    manifest {
        attributes(
            'FMLCorePlugin': 'logisticspipes.asm.LogisticsPipesCoreLoader',
            'FMLCorePluginContainsFMLMod': 'true',
            'Implementation-Vendor': 'RS485',
            'Implementation-Title': 'LogisticsPipes',
            'Implementation-Version': version,
            'Built-By': buildby)
    }
}

task lpSourceJar(type: Jar, dependsOn: 'jar') {
    from sourceSets.main.allSource
    classifier = 'src'
}

// curse {
//    displayName = 'Logistics Pipes 0.11.0 build ' + System.getenv().BUILD_NUMBER

//    projectId = '232838'
//    apiKey = project.hasProperty('curseForgeApiKey') ? project.curseForgeApiKey : ''
//    releaseType = 'release'

//    changelog = project.hasProperty('changelog') ? project.changelog : ''
// }

artifacts {
    archives deobfJar
    archives lpSourceJar
    archives jar
}

tasks.compileApiJava.dependsOn('extract')
tasks.compileJava.dependsOn('loadFingerprints')
tasks.processResources.dependsOn('integrateLang')
tasks.assemble.dependsOn('deobfJar', 'lpSourceJar', 'signJars')
